package com.rockycifu.server.controllers;

import java.util.Map;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.rockycifu.server.models.LoginUser;
import com.rockycifu.server.models.User;
import com.rockycifu.server.services.UserService;

@RestController
@CrossOrigin
@RequestMapping("/api/v1/users")
public class UserController {

	private final UserService service;

	public UserController(UserService service) {
		this.service = service;
	}
	
	@PostMapping("/register")
    public ResponseEntity<Map<String, ?>> register(@RequestBody @Valid User user, BindingResult result, HttpSession session) {
		System.out.println(user.getUserName());
		System.out.println(user.getEmail());
		System.out.println(user.getPassword());
		System.out.println(user.getConfirm());
//		User registeredUser = service.register(user, result);
//		
//		if(registeredUser == null) {
//			//package up error codes and return
//			System.out.println(user);
//			return ResponseEntity.badRequest().build();
//		}
//        session.setAttribute("user_id", registeredUser.getId());
//        session.setAttribute("user_name", registeredUser.getUserName());
        return ResponseEntity.ok().build();
    }
    
    @PostMapping("/login")
    public ResponseEntity<Map<String, ?>> login(@RequestBody @Valid LoginUser login, BindingResult result, HttpSession session) {
    	User loggedInUser = service.login(login, result);
    	
        if(loggedInUser == null) {
        	System.out.println(login);
        	//package up error codes and return
			return ResponseEntity.badRequest().build();
        }		
        session.setAttribute("user_id", loggedInUser.getId());
        session.setAttribute("user_name", loggedInUser.getUserName());
        return ResponseEntity.ok().build();
    }
    
    @PostMapping("/logout")
    public ResponseEntity<Map<String, ?>> logout(HttpSession session) {
    	session.invalidate();
    	return ResponseEntity.ok().build();
    }
}
