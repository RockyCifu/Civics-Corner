package com.rockycifu.server.controllers;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.rockycifu.server.models.Question;
import com.rockycifu.server.services.QuestionService;

@RestController
@CrossOrigin
@RequestMapping("/api/v1/questions")
public class QuestionController {

	private final QuestionService service;

	public QuestionController(QuestionService service) {
		this.service = service;
	}

	@GetMapping
	public ResponseEntity<Map<String, List<Question>>> getQuestions(@RequestParam(required = false) String page) {
		Integer currentPage = validatePage(page);
		if (currentPage == null) return ResponseEntity.notFound().build();

		List<Question> questions = service.findAll().subList(currentPage * 5 - 5, currentPage * 5);
		for(Question q : questions) {
			System.out.println(q.getId());
		}
		Map<String, List<Question>> dataMap = new HashMap<>();
		// dataMap.put("questions", service.findAll());
		return new ResponseEntity<>(dataMap, HttpStatus.OK);
	}

	private Integer validatePage(String page) {
		if (page == null) return 1;
		Integer currentPage;
		try {
			currentPage = Integer.parseInt(page);
			if (currentPage < 1 || currentPage > 20) return null;
		} catch (NumberFormatException ex) {
			return null;
		}
		return currentPage;
	}

	@GetMapping("/{id}")
	public ResponseEntity<Map<String, ?>> getOne(@PathVariable Long id) {
		Question question = service.findOne(id);

		if (question == null) {
			return ResponseEntity.notFound().build();
		}

		Map<String, Question> dataMap = new HashMap<>();
		dataMap.put("question", question);
		return new ResponseEntity<>(dataMap, HttpStatus.OK);
	}
}
