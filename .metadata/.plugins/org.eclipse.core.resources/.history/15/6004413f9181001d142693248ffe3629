package com.rockycifu.server.controllers;

import java.util.HashMap;
import java.util.Map;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.rockycifu.server.models.Test;
import com.rockycifu.server.models.User;
import com.rockycifu.server.services.TestService;
import com.rockycifu.server.services.UserService;

@RestController
@CrossOrigin
@RequestMapping("/api/v1/tests")
public class TestController {

	private final TestService service;
	private final UserService userService;

	public TestController(TestService service, UserService userService) {
		this.service = service;
		this.userService = userService;
	}
	
	@GetMapping("/generate")
	public ResponseEntity<Map<String, Test>> generateTest(){
		Map<String, Test> dataMap = new HashMap<>();
		dataMap.put("test", service.generateOne());
		return new ResponseEntity<>(dataMap, HttpStatus.OK);
	}
	
	@PostMapping
	public ResponseEntity<Map<String, ?>> saveTest(@RequestBody @Valid Test test, BindingResult result, @PathVariable("user_id") Long id){
		User user = userService.findOne(id);
		
		if(result.hasErrors() || user == null) {
			return ResponseEntity.unprocessableEntity().build();
		}
		
		Map<String, Test> dataMap = new HashMap<>();
		test.setUser(user);
		dataMap.put("test", service.persistOne(test));
		return new ResponseEntity<>(dataMap, HttpStatus.OK);
	}
	
}
